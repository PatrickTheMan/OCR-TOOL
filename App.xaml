<Application x:Class="B2S_OCR_Tool.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:B2S_OCR_Tool"
             StartupUri="1_Views/MainWindow.xaml">
    <Application.Resources>

        <!-- Non-solid colors -->

        <Color x:Key="CrosshairColorNS">#FF0000</Color>

        <Color x:Key="LightMainColorNS">#A4FCC4</Color>
        <Color x:Key="MainColorNS">#7CE3B3</Color>
        <Color x:Key="DarkMainColorNS">#5AC9A8</Color>
        <Color x:Key="VeryDarkMainColorNS">#3CAD9E</Color>

        <Color x:Key="LightGrayscaleMainColorNS">#DBDBDB</Color>
        <Color x:Key="GrayscaleMainColorNS">#BEBEBE</Color>
        <Color x:Key="DarkGrayscaleMainColorNS">#A4A4A4</Color>

        <Color x:Key="DarkTextColorNS">#1A1A1A</Color>
        <Color x:Key="GrayTextColorNS">#808080</Color>
        <Color x:Key="LightTextColorNS">#F1F1F1</Color>

        <Color x:Key="IconColorNS">#808080</Color>
        <Color x:Key="BorderColorNS">#2E2E2E</Color>

        <Color x:Key="ForegroundColorNS">#242424</Color>
        <Color x:Key="BackgroundColorNS">#1A1A1A</Color>
        <Color x:Key="OverlayColorNS">#1A1A1A</Color>
        
        <!-- Solid colors -->

        <SolidColorBrush x:Key="CrosshairColor" Color="#FF0000"/>
        
        <SolidColorBrush x:Key="LightMainColor" Color="#A4FCC4"/>
        <SolidColorBrush x:Key="MainColor" Color="#7CE3B3"/>
        <SolidColorBrush x:Key="DarkMainColor" Color="#5AC9A8"/>
        <SolidColorBrush x:Key="VeryDarkMainColor" Color="#3CAD9E"/>

        <SolidColorBrush x:Key="LightGrayscaleMainColor" Color="#DBDBDB"/>
        <SolidColorBrush x:Key="GrayscaleMainColor" Color="#BEBEBE"/>
        <SolidColorBrush x:Key="DarkGrayscaleMainColor" Color="#A4A4A4"/>

        <SolidColorBrush x:Key="DarkTextColor" Color="#1A1A1A"/>
        <SolidColorBrush x:Key="GrayTextColor" Color="#808080"/>
        <SolidColorBrush x:Key="LightTextColor" Color="#F1F1F1"/>

        <SolidColorBrush x:Key="IconColor" Color="#808080"/>
        <SolidColorBrush x:Key="BorderColor" Color="#2E2E2E"/>

        <SolidColorBrush x:Key="ForegroundColor" Color="#242424"/>
        <SolidColorBrush x:Key="BackgroundColor" Color="#1A1A1A"/>
        <SolidColorBrush x:Key="OverlayColor" Color="#1A1A1A"/>

        <!-- TextBox style -->

        <Style TargetType="{x:Type TextBox}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="2" />
                </Style>
            </Style.Resources>
        </Style>

        <!-- Checkbox style -->

        <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Cursor="Hand" Width="16" Height="16" Background="{StaticResource BackgroundColor}" BorderThickness="1" BorderBrush="{StaticResource BorderColor}">
                                    <Path Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="{StaticResource MainColor}" StrokeThickness="1" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox style -->

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" Background="{StaticResource ForegroundColor}" BorderBrush="{StaticResource BorderColor}" BorderThickness="1" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource IconColor}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Arrow" Property="Fill">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{StaticResource LightMainColorNS}" Offset="0.0" />
                                <GradientStop Color="{StaticResource DarkMainColorNS}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Cursor="Hand" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"  Template="{StaticResource ComboBoxTextBox}"  HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="3,3,23,3" Focusable="True"  Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{StaticResource ForegroundColor}" BorderThickness="1" BorderBrush="{StaticResource BorderColor}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- ComboBox item style -->

        <Style TargetType="ComboBoxItem">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource DarkTextColor}"/>
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{StaticResource LightMainColorNS}" Offset="0.0" />
                                <GradientStop Color="{StaticResource DarkMainColorNS}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource LightTextColor}"/>
                    <Setter Property="Background" Value="{StaticResource DarkMainColor}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource GrayTextColor}"/>
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{StaticResource LightGrayscaleMainColorNS}" Offset="0.0" />
                                <GradientStop Color="{StaticResource DarkGrayscaleMainColorNS}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Cursor="Hand" Padding="2">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Cursor="Hand"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--  Secondary button style -->

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="SecondaryButton">
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                        <GradientStop Color="{StaticResource LightMainColorNS}" Offset="0.0" />
                        <GradientStop Color="{StaticResource DarkMainColorNS}" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background ="{TemplateBinding Background}" CornerRadius="2" BorderThickness="1" Cursor="Hand">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,0.9" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource LightMainColorNS}" Offset="0.0" />
                                    <GradientStop Color="{StaticResource DarkMainColorNS}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <ContentPresenter Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{StaticResource LightMainColorNS}" Offset="0.0" />
                                <GradientStop Color="{StaticResource DarkMainColorNS}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="{StaticResource DarkTextColor}"/>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{StaticResource LightMainColorNS}" Offset="0.0" />
                                <GradientStop Color="{StaticResource DarkMainColorNS}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="{StaticResource DarkTextColor}"/>
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{StaticResource LightGrayscaleMainColorNS}" Offset="0.0" />
                                <GradientStop Color="{StaticResource DarkGrayscaleMainColorNS}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{StaticResource LightGrayscaleMainColorNS}" Offset="0.0" />
                                <GradientStop Color="{StaticResource DarkGrayscaleMainColorNS}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Primary button style -->

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="PrimaryButton">
            <Setter Property="Foreground" Value="{StaticResource DarkTextColor}"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                        <GradientStop Color="{StaticResource LightMainColorNS}" Offset="0.0" />
                        <GradientStop Color="{StaticResource DarkMainColorNS}" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background ="{TemplateBinding Background}" CornerRadius="2" BorderThickness="0" Cursor="Hand">
                            <ContentPresenter Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{StaticResource MainColorNS}" Offset="0.0" />
                                <GradientStop Color="{StaticResource VeryDarkMainColorNS}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{StaticResource MainColorNS}" Offset="0.0" />
                                <GradientStop Color="{StaticResource VeryDarkMainColorNS}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{StaticResource LightGrayscaleMainColorNS}" Offset="0.0" />
                                <GradientStop Color="{StaticResource DarkGrayscaleMainColorNS}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
